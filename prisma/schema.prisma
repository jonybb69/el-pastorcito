generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cliente {
  id        Int      @id @default(autoincrement())
  nombre    String
  telefono  String   @unique
  direccion String
  pedidos   Pedido[]
}

model Producto {
  id          Int               @id @default(autoincrement())
  nombre      String
  precio      Float
  pedidos     PedidoProducto[]
  descripcion String 
  imagen      String
  creadoEn    DateTime          @default(now())
}

model Salsa {
  id             Int             @id @default(autoincrement())
  nombre         String
  pedidosSalsas  PedidoSalsa[]   // Relación inversa a PedidoSalsa
}

model Pedido {
  id         Int               @id @default(autoincrement())
  cliente    Cliente           @relation(fields: [clienteId], references: [id], onDelete: Cascade)
  clienteId  Int
  productos  PedidoProducto[]
  comentario String?
  metodoPago String
  creadoEn   DateTime          @default(now())
  estado   String @default("pendiente")

}

model PedidoProducto {
  id         Int             @id @default(autoincrement())
  pedido     Pedido          @relation(fields: [pedidoId], references: [id], onDelete: Cascade)
  pedidoId   Int
  producto   Producto        @relation(fields: [productoId], references: [id])
  productoId Int
  cantidad   Int
  precio     Float
  salsas     PedidoSalsa[]   // Relación inversa a PedidoSalsa
}

model PedidoSalsa {
  id                Int             @id @default(autoincrement())
  productoPedido    PedidoProducto @relation(fields: [productoPedidoId], references: [id], onDelete: Cascade)
  productoPedidoId  Int
  salsa             Salsa          @relation(fields: [salsaId], references: [id])
  salsaId           Int
}
